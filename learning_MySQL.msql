https://www.javatpoint.com/how-to-install-mysql
https://dev.mysql.com/doc/refman/5.7/en/linux-installation-docker.html

learning MySQL

MySQL is becoming so popular because of these following reasons:

    MySQL is an open-source database so you don't have to pay a single penny to use it.
    MySQL is a very powerful program so it can handle a large set of functionality of the most expensive and powerful database packages.
    MySQL is customizable because it is an open source database and the open-source GPL license facilitates programmers to modify the SQL software according to their own specific environment.
    MySQL is quicker than other databases so it can work well even with the large data set.
    MySQL supports many operating systems with many languages like PHP, PERL, C, C++, JAVA, etc.
    MySQL uses a standard form of the well-known SQL data language.
    MySQL is very friendly with PHP, the most popular language for web development.
    MySQL supports large databases, up to 50 million rows or more in a table. The default file size limit for a table is 4GB, but you can increase this (if your operating system can handle it) to a theoretical limit of 8 million terabytes (TB).



////////////////////////////////////////
/                                      /
/                                      /
/                                      /
////////////////////////////////////////
MY SQL HISTORY

  1995 	MySQL AB founded by Michael Widenius (Monty), David Axmark and Allan Larsson in Sweden.
  2000 	MySQL goes open source and releases software under the terms of the GPL. Revenues dropped 80% as a result, and it took a year to make up for it.
  2001 	Marten Mickos elected CEO at age 38. Marten was the CEO of a number of nordic companies before joining MySQL, and comes with a sales and marketing background. 2 million active installations. Raised series a with undisclosed amount from Scandinavian venture capitalists. Estimated to be around $1 to $2 million.
  2002 	MySQL launched us headquarters in addition to Swedish headquarters. 3 million active users. Ended the year with $6.5 million in revenue with 1,000 paying customers.
  2003 	Raised a $19.5 million series b from benchmark capital and index ventures. 4 million active installations and over 30,000 downloads per day. Ended the year with $12 million in revenue.
  2004 	With the main revenue coming from the oem dual-licensing model, MySQL decides to move more into the enterprise market and to focus more on recurring revenue from end users rather than one-time licensing fees from their oem partners. Ended the year with $20 million in revenue.
  2005 	MySQL launched the MySQL network modeled after the Redhat network. the MySQL network is a subscription service targeted at end users that provides updates, alerts, notifications, and product-level support designed to make it easier for companies to manage hundreds of MySQL servers. MySQL 5 ships and includes many new features to go after enterprise users (e.g. stored procedures, triggers, views, cursors, distributed transactions, federated storage engines, etc.) Oracle buys innobase, the 4-person and a Finland's company behind MySQL's innodb storage backend.
  ended the year with $34 million in revenue based on 3400 customers.
  2006
  Marten Mickos confirms that oracle tried to buy MySQL. Oracle' CEO Larry Ellison commented: "we've spoken to them, in fact we've spoken to almost everyone. Are we interested? It's a tiny company. I think the revenues from MySQL are between $30 million and $40 million. Oracle's revenue next year is $15 billion." Oracle buys sleepycat, the company that provides MySQL with the Berkeley db transactional storage engine. Marten Mickos announces that they are making MySQL ready for an IPO in 2008 on an projected $100 million in revenues. 8 million active installations. MySQL has 320 employees in 25 countries, 70 percent of whom work from home, raised a $18 million series c based on a rumored valuation north of $300 million. MySQL is estimated to have a 33% market share measured in install base and 0.2% market share measured in revenue (the database market was a $15 billion market in 2006). Ended the year with $50 million in revenue.
  2007 	Ended the year with $75 million in revenue.
  2008 	Sun Microsystems acquired MySQL AB for approximately $1 billion. Michael Widenius (Monty) and David Axmark, two of MySQL AB's co-founders, begin to criticize Sun publicly and leave Sun shortly after.
  2009 	Marten Mickos leaves Sun and becomes entrepreneur-in-residence at Benchmark Capital. Sun has now lost the business and spiritual leaders that turned MySQL into a success.
  Sun Microsystems and Oracle announced that they have entered into a definitive agreement under which Oracle will acquire Sun common stock for $9.50 per share in cash. The transaction is valued at approximately $7.4 billion.



  ////////////////////////////////////////
  /                                      /
  /                                      /
  /                                      /
  ////////////////////////////////////////
  MySQL Features


    Relational Database Management System (RDBMS): MySQL is a relational database management system.
    Easy to use: MySQL is easy to use. You have to get only the basic knowledge of SQL. You can build and interact with MySQL with only a few simple SQL statements.
    It is secure: MySQL consist of a solid data security layer that protects sensitive data from intruders. Passwords are encrypted in MySQL.
    Client/ Server Architecture: MySQL follows a client /server architecture. There is a database server (MySQL) and arbitrarily many clients (application programs),
     which communicate with the server; that is, they query data, save changes, etc.
    Free to download: MySQL is free to use and you can download it from MySQL official website.
    It is scalable: MySQL can handle almost any amount of data, up to as much as 50 million rows or more.
    The default file size limit is about 4 GB. However, you can increase this number to a theoretical limit of 8 TB of data.
    Compatibale on many operating systems: MySQL is compatible to run on many operating systems,
    like Novell NetWare, Windows* Linux*, many varieties of UNIX*
    (such as Sun* Solaris*, AIX, and DEC* UNIX), OS/2, FreeBSD*, and others. MySQL also provides a facility that the clients can run on the same computer as the server or on another computer (communication via a local network or the Internet).
    Allows roll-back: MySQL allows transactions to be rolled back, commit and crash recovery.
    High Performance: MySQL is faster, more reliable and cheaper because of its unique storage engine architecture.
    High Flexibility: MySQL supports a large number of embedded applications which makes MySQL very flexible.
    High Productivity: MySQL uses Triggers, Stored procedures and views which allows the developer to give a higher productivity.



////////////////////////
/                      /
////////////////////////

Drawback of MySQL

    MySQL version less than 5.0 doesn't support ROLE, COMMIT and stored procedure.
    MySQL does not support a very large database size as efficiently.
    MySQL doesn't handle transactions very efficiently and it is prone to data corruption.
    MySQL is accused that it doesn't have a good developing and debugging tool compared to paid databases.
    MySQL doesn't support SQL check constraints.

////////////////////////////////////////
/                                      /
/                                      /
/                                      /
////////////////////////////////////////
MySQL Data Types

suports a lot of data TypeS
broken into numeric, time, and strings

////////////////////////
/                      /
////////////////////////

Numeric Data Type
INT 	A normal-sized integer that can be signed or unsigned.
If signed, the allowable range is from -2147483648 to 2147483647.
If unsigned, the allowable range is from 0 to 4294967295. You can specify a width of up to 11 digits.
TINYINT 	A very small integer that can be signed or unsigned.
 If signed, the allowable range is from -128 to 127.
 If unsigned, the allowable range is from 0 to 255. You can specify a width of up to 4 digits.
SMALLINT 	A small integer that can be signed or unsigned.
If signed, the allowable range is from -32768 to 32767.
If unsigned, the allowable range is from 0 to 65535. You can specify a width of up to 5 digits.
MEDIUMINT 	A medium-sized integer that can be signed or unsigned.
If signed, the allowable range is from -8388608 to 8388607.
If unsigned, the allowable range is from 0 to 16777215. You can specify a width of up to 9 digits.
BIGINT 	A large integer that can be signed or unsigned.
If signed, the allowable range is from -9223372036854775808 to 9223372036854775807.
 If unsigned, the allowable range is from 0 to 18446744073709551615. You can specify a width of up to 20 digits.
FLOAT(m,d) 	A floating-point number that cannot be unsigned.
 You can define the display length (m) and the number of decimals (d).
 This is not required and will default to 10,2, where 2 is the number of decimals and 10 is the total number of digits (including decimals).
  Decimal precision can go to 24 places for a float.
DOUBLE(m,d) 	A double precision floating-point number that cannot be unsigned.
 You can define the display length (m) and the number of decimals (d).
 This is not required and will default to 16,4, where 4 is the number of decimals.
 Decimal precision can go to 53 places for a double. Real is a synonym for double.
DECIMAL(m,d) 	An unpacked floating-point number that cannot be unsigned
. In unpacked decimals, each decimal corresponds to one byte.
Defining the display length (m) and the number of decimals (d) is required. Numeric is a synonym for decimal.

////////////////////////
/                      /
////////////////////////
Date and Time Data Type:
DATE 	Values range from '1000-01-01' to '9999-12-31'. 	Displayed as 'yyyy-mm-dd'.
DATETIME 	Values range from '1000-01-01 00:00:00' to '9999-12-31 23:59:59'. 	Displayed as 'yyyy-mm-dd hh:mm:ss'.
TIMESTAMP(m) 	Values range from '1970-01-01 00:00:01' UTC to '2038-01-19 03:14:07' TC. 	Displayed as 'YYYY-MM-DD HH:MM:SS'.
TIME 	Values range from '-838:59:59' to '838:59:59'. 	Displayed as 'HH:MM:SS'.
YEAR[(2|4)] 	Year value as 2 digits or 4 digits. 	Default is 4 digits.


////////////////////////
/                      /
////////////////////////

String Data TypeS
CHAR(size) 	Maximum size of 255 characters. 	Where size is the number of characters to store.
 Fixed-length strings. Space padded on right to equal size characters.
VARCHAR(size) 	Maximum size of 255 characters. 	Where size is the number of characters to store. Variable-length string.
TINYTEXT(size) 	Maximum size of 255 characters. 	Where size is the number of characters to store.
TEXT(size) 	Maximum size of 65,535 characters. 	Where size is the number of characters to store.
MEDIUMTEXT(size) 	Maximum size of 16,777,215 characters. 	Where size is the number of characters to store.
LONGTEXT(size) 	Maximum size of 4GB or 4,294,967,295 characters. 	Where size is the number of characters to store.
BINARY(size) 	Maximum size of 255 characters. 	Where size is the number of binary characters to store.
Fixed-length strings. Space padded on right to equal size characters.
(introduced in MySQL 4.1.2)
VARBINARY(size) 	Maximum size of 255 characters.        Where size is the number of characters to store. Variable-length string.
(introduced in MySQL 4.1.2)

////////////////////////
/                      /
////////////////////////
Large Object Data Types (LOB) Data Types:
Data Type Syntax 	Maximum Size
TINYBLOB 	Maximum size of 255 bytes.
BLOB(size) 	Maximum size of 65,535 bytes.
MEDIUMBLOB 	Maximum size of 16,777,215 bytes.
LONGTEXT 	Maximum size of 4gb or 4,294,967,295 characters.


////////////////////////////////////////
/                                      /
/                                      /
/                                      /
////////////////////////////////////////
How to install MySQL


https://dev.mysql.com/doc/refman/5.7/en/which-version.html


mysql-5.7.1-m1
5 is the major version
7 is the minor
together its the series #
1 rep the the amt of bugs higher the # less bugs

mN milstone, thtroughly tested Features'
rc Rekease Candidate fixes earlier bugs
no suffix indicates stable GA

consider install from a source distribution


    You want to install MySQL at some explicit location. The standard binary distributions are ready to run at any installation location, but you might require even more flexibility to place MySQL components where you want.

    You want to configure mysqld with features that might not be included in the standard binary distributions. Here is a list of the most common extra options used to ensure feature availability:

        -DWITH_LIBWRAP=1 for TCP wrappers support.

        -DWITH_ZLIB={system|bundled} for features that depend on compression

        -DWITH_DEBUG=1 for debugging support

    For additional information, see Section 2.9.4, “MySQL Source-Configuration Options”.

    You want to configure mysqld without some features that are included in the standard binary distributions. For example, distributions normally are compiled with support for all character sets. If you want a smaller MySQL server, you can recompile it with support for only the character sets you need.

    You want to read or modify the C and C++ code that makes up MySQL. For this purpose, obtain a source distribution.

    Source distributions contain more tests and examples than binary distributions.


https://dev.mysql.com/doc/mysql-apt-repo-quick-guide/en/
////////////////////////////////////////
/                                      /
/                                      /
/                                      /
////////////////////////////////////////
Starting and Stopping the MySQL Server
*it automattically starts after installation
status
  sudo service mysql status
stop
  sudo service mysql stop
restart
  sudo service mysql start

  avoid Using
    akonadi-backend-mysql, handlersocket-mysql-5.5, and zonemind


    reference :
      1. https://www.javatpoint.com/how-to-install-mysql
      2. https://dev.mysql.com/doc/refman/5.7/en/installing.html
      3.  https://www.mysql.com/support/supportedplatforms/database.html
      4. https://dev.mysql.com/doc/mysql-apt-repo-quick-guide/en/
      5. https://dev.mysql.com/doc/refman/5.7/en/upgrading.html
      6. https://dev.mysql.com/doc/refman/5.7/en/mysql-cluster-install-configuration.html
      7. https://dev.mysql.com/doc/refman/5.7/en/mysql-cluster-installation.html#mysql-cluster-install-nodes-hosts

      steps

        checked 3 to see if MySQL ver 5.7 was supported on ubuntu 16.04 and it was
        I have to download it before I install so lets go ahead

        Download
        4.
          Adding the MySQL APT Repository
          add the MySQL APT repository to your system's software repository list
          shell
            sudo dpkg -i ./mysql-apt-config_0.8.9-1_all.deb
            selected ok
            sudo apt-get update
            Once the MySQL APT repository is enabled on your system, you will no longer be able to install
            any MySQL packages from your platform's native software repositories until the MySQL APT repository is disabled.


          Installing MySQL with APT
             sudo apt-get install mysql-server
             password availabs password but with 22

          Selecting a Major Release Version and changing MySQL plugins
          you can switch to another supported major release series
           at any time by reconfiguring the configuration package you have installed
           sudo dpkg-reconfigure mysql-apt-config
           latest version will be installed when you use apt-get


           Installing Additional MySQL Products and Components

              sudo apt-get update
           to install a desired package
              sudo apt-get install [package-name]
           list of package
              https://dev.mysql.com/doc/mysql-apt-repo-quick-guide/en/#repo-qg-apt-available


          Upgrading MySQL with the MySQL APT Repository
          please return here when ready
              https://dev.mysql.com/doc/refman/5.7/en/upgrading.html

          Use the MySQL APT repository to perform an in-place upgrade for your MySQL installation
          (that is, replacing the old version and then running the new version off the old data files) by following these steps:

                Make sure you already have the MySQL APT repository on your system's repository list
                Make sure you have the most up-to-date package information on the MySQL APT repository by running:
                       sudo apt-get update

                As a general rule, to upgrade from one release series to another,
                go to the next series rather than skipping a series.

                to upgrade
                    sudo apt-get install mysql-server

                to upgrade any packages
                    sudo apt-get install package-name

                to see package names
                     dpkg -l | grep mysql | grep ii

                The MySQL server always restarts after an update by APT. Once the server restarts, you should run mysql_upgrade
                to check and possibly resolve any incompatibilities between the old data and the upgraded software

            Replacing a Native Distribution of MySQL Using the MySQL APT Repository
              backup your databases

                add MySQL APT repo and select release series

                Replacing the Native Distribution by an APT Update
                    do not apt-get purge the old  MySQL packages

            Replacing a MySQL Server Installed by a Direct deb Package Download


            Removing MySQL with APT
              first remove the servers
                  sudo apt-get remove mysql-server

              then remove any other software
                  sudo apt-get autoremove

              then remove chosen packages
                  sudo apt-get remove package-name


            Installing MySQL NDB Cluster Using the APT Repository
                If you already have the MySQL server or MySQL NDB Cluster installed
                on your system, make sure it is stopped and you have your data and configuration files backed up before proceeding.
                The MySQL NDB Cluster packages have dependencies on the python-paramiko and libclass-methodmaker-perl packages,
                which are currently NOT installed automatically when you install the NDB Cluster packages;
                install those required packages yourself with this command before installing the NDB Cluster packages:
                    sudo apt-get install python-paramiko libclass-methodmaker-perl

                  Adding the MySQL APT Repository for MySQL NDB Cluster
                       sudo dpkg-reconfigure mysql-apt-config
                      chose MySQL Server & Cluster
                          MySQL Cluster contains MySQL server

                  Installing MySQL NDB Cluster
                        minimal installation
                            components for SQL nodes
                                sudo apt-get install mysql-community-server
                              was not asked about a password

                            Install the executables for management nodes:
                                sudo apt-get install mysql-cluster-community-management-server
                                found: did not exist
                                      result : sudo apt-get install mysql-apt-config
                                               sudo apt-get update
                                               sudo apt-get install mysql-cluster-community-server
                                               rmvd mysql-community-server

                            Install the executables for data nodes:
                                sudo apt-get install mysql-cluster-community-data-node


                  Configuring and Starting MySQL NDB Cluster

                    Initial Configuration of NDB Cluster
                    6.
                        try to look at 7

                    do not do I am not gunna attempt to use VM till I understand them, and I do not have 4 computers

                  Installing Additional MySQL NDB Cluster Products and Components
                      Currently, not all components required for running the MySQL NDB Cluster test suite are installed automatically when you install the test suite package (mysql-cluster-community-test). Install the following packages with apt-get install before you run the test suite:

                          mysql-cluster-community-auto-installer

                          mysql-cluster-community-management-server

                          mysql-cluster-community-data-node

                          mysql-cluster-community-memcached

                          mysql-cluster-community-java

                          ndbclient-dev


                    if you have an up[date] error go here to appendix C

                    Post-installation
                      none needed you used apt-get to install

////////////////////////////////////////
/                                      /
/                                      /
/                                      /
////////////////////////////////////////

      When you forget your password
      https://coderwall.com/p/j9btlg/reset-the-mysql-5-7-root-password-in-ubuntu-16-04-lts
      sudo service mysql stop
      sudo mkdir /var/run/mysqld
      sudo chown mysql: /var/run/mysqld

      this command must be run in tmux and you will need to continue from another terminal window
      -------------------------------------------------------------------------------------
      sudo mysqld_safe --skip-grant-tables --skip-networking &
      ----------------------------------------------------------------------------------
      mysql -uroot mysql
      UPDATE mysql.user SET authentication_string=PASSWORD('YOURNEWPASSWORD'), plugin='mysql_native_password' WHERE User='root' AND Host='%';
      EXIT;
      sudo mysqladmin -S /var/run/mysqld/mysqld.sock shutdown
      sudo service mysql start


  https://dev.mysql.com/doc/refman/5.7/en/connecting-disconnecting.html

  ////////////////////////////////////////
  /                                      /
  /                                      /
  /                                      /
  ////////////////////////////////////////
  3.1 Connecting to and Disconnecting from the Server

  ////////////////////////
  /                      /
  ////////////////////////
  to log in to a remote server
      shell> mysql -h host -u user -p
      Enter password: ********

  if you are on the same server
        shell> mysql -u user -p

  if your server allows you to log in anomyously
    shell> mysql

  to EXIT
    shell> EXIT

////////////////////////////////////////
/                                      /
/                                      /
/                                      /
////////////////////////////////////////
3.2 Entering Queries

    ////////////////////////
    /                      /
    ////////////////////////
    A QUERY FOR VERSION info

      SELECT VERSION(), CURRENT_DATE;

    -[ you need to have semicolon at the end of your statements
    -[ when you query, it goes to the server result display then ready again
    -[ displays tabular content where first row is category and sucessive are results
    -[ shows how many rows were returned and how long the query took to execute, which gives you a rough idea of server performance


    ////////////////////////
    /                      /
    ////////////////////////
    Keywords can be entered anyhow
        mysql> SELECT VERSION(), CURRENT_DATE;
        mysql> select version(), current_date;
        mysql> SeLeCt vErSiOn(), current_DATE;

    ////////////////////////
    /                      /
    ////////////////////////
    MySQL can be used as a calculator
        SELECT SIN(PI()/4), (4+1)*5;

    ////////////////////////
    /                      /
    ////////////////////////
    Multi line statements
        SELECT VERSION(); SELECT NOW();

    ////////////////////////
    /                      /
    ////////////////////////
    SQL does not execute until it sees the
    semicolon
        mysql> SELECT
        -> USER()
        -> ,
        -> CURRENT_DATE;


    ////////////////////////
    /                      /
    ////////////////////////
    to terminate query execute
        mysql> SELECT
        -> USER()
        -> \c

    ////////////////////////
    /                      /
    ////////////////////////
    SQL prompt interpretation
        mysql> 	Ready for new query
        -> 	Waiting for next line of multiple-line query
        '> 	Waiting for next line, waiting for completion of a string that began with a single quote (')
        "> 	Waiting for next line, waiting for completion of a string that began with a double quote (")
        `> 	Waiting for next line, waiting for completion of an identifier that began with a backtick (`)
        /*> 	Waiting for next line, waiting for completion of a comment that began with /*

    ////////////////////////
    /                      /
    ////////////////////////
    if you want to cancel a query including strings, make sure you end the string in the next statement
        mysql> SELECT * FROM my_table WHERE name = 'Smith AND age < 30;
            '> '\c
        mysql>

     rmbr to supply the terminating quote before you can cancel the current query.

Suppose that you have several pets in your home (your menagerie) and you would like to keep track of various types of information about them. You can do so by creating tables to hold your data and loading them with the desired information


     ////////////////////////////////////////
     /                                      /
     /                                      /
     /                                      /
     ////////////////////////////////////////
     3.3 Creating and Using a Database


     Suppose that you have several pets in your home (your menagerie) and you would like to keep track
     of various types of information about them.
     You can do so by creating tables to hold your data and loading them with the desired information

         ////////////////////////
         /                      /
         ////////////////////////
        Use the SHOW statement to find out what databases currently exist on the server:
            mysql> SHOW DATABASES;
            The mysql database describes user access privileges.
             The test database often is available as a workspace for users to try things out.

             mysql> USE test
             USE does not require a semicolon but it must be given on a single

         ////////////////////////
         /                      /
         ////////////////////////
         to make your own private database
            mysql> GRANT ALL ON [database_name].* TO ['your_mysql_name']@['your_client_host'];

        3.3.1
        ////////////////////////
        /                      /
        ////////////////////////
        to create your own database
            mysql> CREATE DATABASE menagerie;

        ////////////////////////
        /                      /
        ////////////////////////
        to make meangerie the current database
        database needs to be created only once, but you must select it for use each time you begin a mysql session.
            mysql> USE menagerie

        ////////////////////////
        /                      /
        ////////////////////////
        to set the database upon opening SQL
            shell> mysql -h host -u user -p

      ////////////////////////
      /                      /
      ////////////////////////
       to see which database is selected
        SELECT DATABASE();


       3.3.2 Creating a Table
       ////////////////////////
       /                      /
       ////////////////////////
       to see what table are in a database
          mysql> SHOW TABLES;

      ////////////////////////
      /                      /
      ////////////////////////
      Use a CREATE TABLE statement to specify the layout of your table:
        mysql> CREATE TABLE pet (name VARCHAR(20), owner VARCHAR(20),
                -> species VARCHAR(20), sex CHAR(1), birth DATE, death DATE);


                ////////////////////////
                /                      /
                ////////////////////////
                to see table as intended use a describe statement
                    mysql> DESCRIBE pet;



        3.3.3 Loading Data into a Table
        -[ MySQL expects dates in 'YYYY-MM-DD'
        ////////////////////////
        /                      /
        ////////////////////////
        to load data into the table
            make a txt file here known as pet.txt
            -[ tab represents the whitespace reflecting to proper population of table fields
            -[ \N is used to represent null

            To load the text file pet.txt into the pet table, use this statement:
                mysql> LOAD DATA LOCAL INFILE '/path/pet.txt' INTO TABLE pet;


        ////////////////////////
        /                      /
        ////////////////////////
        when you want  to add data one at a time
        -[Also, with INSERT, you can insert NULL directly to represent a missing value
        mysql> INSERT INTO pet
                -> VALUES ('Puffball','Diane','hamster','f','1999-03-30',NULL);
